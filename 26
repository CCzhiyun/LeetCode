给定一个排序数组，你需要在原地删除重复出现的元素，使得每个元素只出现一次，返回移除后数组的新长度。
不要使用额外的数组空间，你必须在原地修改输入数组并在使用 O(1) 额外空间的条件下完成。
class Solution {
    public int removeDuplicates(int[] nums) {
        int i = 0;
        for(int j = 1; j<nums.length; j++){
            if(nums[j] != nums[i]){
                i++;
                nums[i] = nums[j];
            }
        }
        return i+1;
    }
}

ps：因为是排序数据，所以不存在[1,1,2,1,1]，只会是这种[1,1,2]。第一次比较数组index已经不一样，因为0和0比较一定一样。
1.首先第一次遍历，j=1,i=0,所以第一个数和第二个数比较，因为是nums[0]==nums[1]，所以跳过，但是因为nums[]本来是有值的，其实这里已经将numsp[1]和nums[0]合并
2.第二次遍历j=2，nums[0]!=nums[2],所以i=1，得到nums[1]=2。
